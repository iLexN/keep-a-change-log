name: CI Check

on:
  pull_request: null
  push:
    branches:
      - 2.x

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['8.1', '8.2']

    name: PHP ${{ matrix.php }} tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: composer-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug

      - name: Composer install
        run: composer install --ansi

      - name: Execute tests
        run: vendor/bin/phpunit --coverage-clover build/logs/clover.xml

      - name: Upload coverage results to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          composer global require php-coveralls/php-coveralls symfony/console:^5
          php-coveralls --coverage_clover=build/logs/clover.xml -v
  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['8.1']

    name: PHP ${{ matrix.php }} code check
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: composer-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug

      - name: Composer install
        run: composer install --ansi

      #      - name: Code style check
      #        run: composer cs-check

      - name: PhpStan check
        run: composer bug-check

      - name: Psalm check
        run: composer psalm

      - name: Rector check
        run: composer rector-check

      - name: Infection check
        env:
          INFECTION_BADGE_API_KEY: ${{ secrets.INFECTION_BADGE_API_KEY }}
        run: vendor/bin/infection --threads=4 -s
